apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/halkyonio/rhtap-buildpack-demo-1?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    appstudio.openshift.io/request: configure-pac
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-event: '[push]'
    pipelinesascode.tekton.dev/on-target-branch: '[main]'
  labels:
    appstudio.openshift.io/application: rhtap-buildpack-demo-1
    appstudio.openshift.io/component: rhtap-buildpack-demo-1
    pipelines.appstudio.openshift.io/type: build
    rhtap.snowdrop.dev/build: test-0
  name: rhtap-buildpack-demo-1
  namespace: cmoullia-tenant
spec:
  params:
    - name: git-url
      value: '{{repo_url}}'
    - name: image-expires-after
      value: 5d
    - name: output-image
      value: quay.io/redhat-user-workloads/cmoullia-tenant/rhtap-buildpack-demo-1/rhtap-buildpack-demo-1:build-{{revision}}
    - name: path-context
      value: .
    - name: revision
      value: '{{revision}}'
    - name: sourceSubPath
      value: .
    - name: cnbLogLevel
      value: debug
    - name: cnbBuilderImage
      value: paketobuildpacks/builder-jammy-tiny:0.0.176
    - name: cnbBuildImage
      value: paketobuildpacks/build-jammy-tiny:latest
    - name: cnbRunImage
      value: paketobuildpacks/run-jammy-tiny:latest
    - name: cnbBuildEnvVars
      value:
        - BP_NATIVE_IMAGE=false
        - BP_MAVEN_BUILT_ARTIFACT=target/quarkus-app/lib/ target/quarkus-app/*.jar target/quarkus-app/app/ target/quarkus-app/quarkus/
        - BP_MAVEN_BUILD_ARGUMENTS=package -DskipTests=true -Dmaven.javadoc.skip=true -Dquarkus.package.type=fast-jar
  pipelineSpec:
    finally:
      - name: show-sbom
        when:
          - input: $(params.enable-sbom)
            operator: in
            values:
              - "true"
        params:
          - name: GRYPE_IMAGE
            value: anchore/grype:v0.65.1
          - name: ARGS
            value:
              - $(tasks.build-container.results.IMAGE_URL)
              - -o $(params.grype-sbom-format)
        taskRef:
          resolver: git
          params:
            - name: url
              value: https://github.com/tektoncd/catalog.git
            - name: revision
              value: main
            - name: pathInRepo
              value: task/grype/0.1/grype.yaml
        workspaces:
          - workspace: workspace
            name: source-dir
      - name: show-summary
        when:
          - input: $(params.enable-sbom)
            operator: in
            values:
              - "true"
        params:
          - name: pipelinerun-name
            value: $(context.pipelineRun.name)
          - name: git-url
            value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
          - name: image-url
            value: $(params.output-image)
          - name: build-task-status
            value: $(tasks.build-container.status)
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-summary:0.2@sha256:abdf426424f1331c27be80ed98a0fbcefb8422767d1724308b9d57b37f977155
          name: summary
    params:
      - description: Source Repository URL
        name: git-url
        type: string
      - default: ""
        description: Revision of the Source Repository
        name: revision
        type: string
      - description: Fully Qualified Output Image
        name: output-image
        type: string
      - default: .
        description: The path to your source code
        name: path-context
        type: string
      - default: Dockerfile
        description: Path to the Dockerfile
        name: dockerfile
        type: string
      - default: "false"
        description: Force rebuild image
        name: rebuild
        type: string
      - description: A boolean indicating whether we would like to execute a step
        default: "true"
        name: enable-sbom
        type: string
      - default: table
        description: Format to be used to export/show the SBOM. Format available for grype are 'json table cyclonedx cyclonedx-json sarif template'
        name: grype-sbom-format
        type: string
      - default: "false"
        description: Skip checks against built image
        name: skip-checks
        type: string
      - default: "true"
        description: Skip optional checks, set false if you want to run optional checks
        name: skip-optional
        type: string
      - default: "false"
        description: Execute the build with network isolation
        name: hermetic
        type: string
      - default: ""
        description: Build dependencies to be prefetched by Cachi2
        name: prefetch-input
        type: string
      - default: "false"
        description: Java build
        name: java
        type: string
      - default: ""
        description: Snyk Token Secret Name
        name: snyk-secret
        type: string
      - default: ""
        description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
        name: image-expires-after
      - default: .
        description: Subpath of the git cloned project where code should be used
        name: sourceSubPath
        type: string
      - default: ""
        description: Buildpacks Builder image to be used to build the runtime
        name: cnbBuilderImage
        type: string
      - default: ""
        description: TODO
        name: cnbLifecycleImage
        type: string
      - default: ""
        name: cnbBuildImage
        description: TODO
        type: string
      - default: ""
        description: TODO
        name: cnbRunImage
        type: string
      - default:
          - ""
        description: Environment variables to set during _build-time_.
        name: cnbBuildEnvVars
        type: array
      - default: info
        description: TODO
        name: cnbLogLevel
        type: string
      - default: "true"
        description: TODO
        name: cnbExperimentalMode
        type: string
      - default: ""
        description: TODO
        name: AppImage
        type: string
    results:
      - description: The URL of the built `APPLICATION_IMAGE`
        name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      - description: The digest of the built `APPLICATION_IMAGE`
        name: IMAGE_DIGEST
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - description: ""
        name: CHAINS-GIT_URL
        value: $(tasks.clone-repository.results.url)
      - description: ""
        name: CHAINS-GIT_COMMIT
        value: $(tasks.clone-repository.results.commit)
    tasks:
      - name: init
        params:
          - name: image-url
            value: $(params.output-image)
          - name: rebuild
            value: $(params.rebuild)
          - name: skip-checks
            value: $(params.skip-checks)
          - name: skip-optional
            value: $(params.skip-optional)
          - name: pipelinerun-name
            value: $(context.pipelineRun.name)
          - name: pipelinerun-uid
            value: $(context.pipelineRun.uid)
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-init:0.2@sha256:61f1202766cd66242c8472b16aa7fa1a20f8d9a5d674cbad27ffd4b3d067e936
          name: init
      - name: clone-repository
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.revision)
        runAfter:
          - init
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:e1f7a275d722bc3147a65fcd772b16b54ccb6ce81c76939bc1052b2438dd2ccf
          name: git-clone
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
        workspaces:
          - name: output
            workspace: workspace
          - name: basic-auth
            workspace: git-auth
      - name: build-container
        params:
          - name: IMAGE
            value: $(params.output-image)
          - name: DOCKERFILE
            value: $(params.dockerfile)
          - name: CONTEXT
            value: $(params.path-context)
          - name: HERMETIC
            value: $(params.hermetic)
          - name: PREFETCH_INPUT
            value: $(params.prefetch-input)
          - name: IMAGE_EXPIRES_AFTER
            value: $(params.image-expires-after)
          - name: COMMIT_SHA
            value: $(tasks.clone-repository.results.commit)
          - name: APP_IMAGE
            value: $(params.output-image)
          - name: SOURCE_SUBPATH
            value: $(params.sourceSubPath)
          - name: CNB_LOG_LEVEL
            value: $(params.cnbLogLevel)
          - name: CNB_BUILDER_IMAGE
            value: $(params.cnbBuilderImage)
          - name: CNB_LIFECYCLE_IMAGE
            value: $(params.cnbLifecycleImage)
          - name: CNB_EXPERIMENTAL_MODE
            value: $(params.cnbExperimentalMode)
          - name: CNB_BUILD_IMAGE
            value: $(params.cnbBuildImage)
          - name: CNB_RUN_IMAGE
            value: $(params.cnbRunImage)
          - name: CNB_ENV_VARS
            value:
              - $(params.cnbBuildEnvVars)
        runAfter:
          - clone-repository
        taskRef:
          resolver: git
          params:
            - name: url
              value: https://github.com/redhat-buildpacks/catalog.git
            - name: revision
              value: main
            - name: pathInRepo
              value: tekton/task/buildpacks-phases/01/buildpacks-phases.yaml
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
        workspaces:
          - name: source
            workspace: workspace
      - name: inspect-image
        params:
          - name: IMAGE_URL
            value: $(tasks.build-container.results.IMAGE_URL)
          - name: IMAGE_DIGEST
            value: $(tasks.build-container.results.IMAGE_DIGEST)
        runAfter:
          - build-container
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-inspect-image:0.1@sha256:e8a2baa6f56a019d2c89c25d7546f0563b1632d4fbc28ff129aaf9a8df35c7f5
          name: inspect-image
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "true"
        workspaces:
          - name: source
            workspace: workspace
      - name: clair-scan
        params:
          - name: image-digest
            value: $(tasks.build-container.results.IMAGE_DIGEST)
          - name: image-url
            value: $(tasks.build-container.results.IMAGE_URL)
        runAfter:
          - build-container
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-clair-scan:0.1@sha256:3d9d05162d5807cde4431e80f0f126f4c19994c0c1633629a62ece9a43b966cd
          name: clair-scan
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "true"
      - name: sast-snyk-check
        params:
          - name: SNYK_SECRET
            value: $(params.snyk-secret)
        runAfter:
          - clone-repository
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-sast-snyk-check:0.1@sha256:e6acf744313561b376b44724e81188f354b84cf3b0b3875e75efe7e0209637a2
          name: sast-snyk-check
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "true"
          - input: $(params.snyk-secret)
            operator: notin
            values:
              - ""
        workspaces:
          - name: workspace
            workspace: workspace
      - name: clamav-scan
        params:
          - name: image-digest
            value: $(tasks.build-container.results.IMAGE_DIGEST)
          - name: image-url
            value: $(tasks.build-container.results.IMAGE_URL)
        runAfter:
          - build-container
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-clamav-scan:0.1@sha256:559d281b58584386a6faaf0e6641c814f9d877432d1a13bd03076745fffffaf1
          name: clamav-scan
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "true"
      - name: sbom-json-check
        params:
          - name: IMAGE_URL
            value: $(tasks.build-container.results.IMAGE_URL)
          - name: IMAGE_DIGEST
            value: $(tasks.build-container.results.IMAGE_DIGEST)
        runAfter:
          - build-container
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-sbom-json-check:0.1@sha256:d34362be8843715b1bcdaf55fcbf1be315094e0dc840562c5cec22716a37a1fe
          name: sbom-json-check
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "true"
    workspaces:
      - name: workspace
      - name: git-auth
        optional: true
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
        status: {}
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
